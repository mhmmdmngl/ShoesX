@model WholesaleShoeStore.ViewModels.LoginRequest
@{
    ViewData["Title"] = "Customer Login";
    Layout = "_CustomerLoginLayout";
}

<!-- Error Alert -->
@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger d-flex align-items-center modern-alert" role="alert">
        <i class="fas fa-exclamation-circle me-3"></i>
        <div>@ViewBag.ErrorMessage</div>
    </div>
}

<div class="modern-login-card">
    <div class="login-header">
        <h2 class="login-title">Welcome Back</h2>
        <p class="login-subtitle">Sign in to access your wholesale account</p>
    </div>

    <form method="post" action="/Customer/Login" class="login-form">
        @Html.AntiForgeryToken()

        <div class="form-group">
            <label for="Email" class="form-label">Email Address</label>
            <div class="input-group">
                <i class="fas fa-envelope input-icon"></i>
                <input type="email" id="Email" name="Email" class="form-control"
                       placeholder="Enter your email address"
                       value="@(Model?.Email ?? "")"
                       autocomplete="email" required>
            </div>
            <span class="text-danger field-validation-valid error-message" data-valmsg-for="Email" data-valmsg-replace="true"></span>
        </div>

        <div class="form-group">
            <div class="label-row">
                <label for="Password" class="form-label">Password</label>
                <a href="#" class="forgot-password">Forgot Password?</a>
            </div>
            <div class="input-group">
                <i class="fas fa-lock input-icon"></i>
                <input type="password" id="Password" name="Password" class="form-control"
                       placeholder="Enter your password"
                       autocomplete="current-password" required>
                <button type="button" class="password-toggle" id="togglePassword">
                    <i class="fas fa-eye"></i>
                </button>
            </div>
            <span class="text-danger field-validation-valid error-message" data-valmsg-for="Password" data-valmsg-replace="true"></span>
        </div>

        <div class="form-options">
            <div class="checkbox-container">
                <input type="checkbox" id="rememberMe" name="RememberMe" value="true" class="form-check-input">
                <label for="rememberMe" class="form-check-label">Remember me</label>
            </div>
        </div>

        <button type="submit" class="login-button">
            <i class="fas fa-sign-in-alt"></i>
            <span>Sign In</span>
        </button>
    </form>

    <div class="business-inquiry">
        <p>For business inquiries, please contact our sales team.</p>
    </div>
</div>

@section Scripts {
    <script>
        // Password visibility toggle
        document.getElementById('togglePassword').addEventListener('click', function() {
            const passwordInput = document.getElementById('Password');
            const icon = this.querySelector('i');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        });

        // Enhanced form validation
        document.querySelector('.login-form').addEventListener('submit', function(e) {
            const email = document.getElementById('Email').value.trim();
            const password = document.getElementById('Password').value.trim();
            let hasError = false;

            // Clear previous errors
            document.querySelectorAll('.error-message').forEach(el => {
                el.textContent = '';
                el.style.display = 'none';
            });

            // Email validation
            if (!email) {
                const emailError = document.querySelector('[data-valmsg-for="Email"]');
                emailError.textContent = 'Email address is required.';
                emailError.style.display = 'block';
                hasError = true;
            } else if (!isValidEmail(email)) {
                const emailError = document.querySelector('[data-valmsg-for="Email"]');
                emailError.textContent = 'Please enter a valid email address.';
                emailError.style.display = 'block';
                hasError = true;
            }

            // Password validation
            if (!password) {
                const passwordError = document.querySelector('[data-valmsg-for="Password"]');
                passwordError.textContent = 'Password is required.';
                passwordError.style.display = 'block';
                hasError = true;
            }

            if (hasError) {
                e.preventDefault();
                return;
            }

            // Show loading state
            const submitButton = document.querySelector('.login-button');
            const icon = submitButton.querySelector('i');
            const span = submitButton.querySelector('span');

            icon.className = 'fas fa-spinner fa-spin';
            span.textContent = 'Signing In...';
            submitButton.disabled = true;
        });

        // Email validation function
        function isValidEmail(email) {
            const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            return emailRegex.test(email);
        }

        // Smooth focus animations
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'scale(1.02)';
                this.parentElement.style.transition = 'transform 0.2s ease';
            });

            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'scale(1)';
            });
        });
    </script>
}